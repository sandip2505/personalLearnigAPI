<%- contentFor('extra_css') %>
<style>
    .blog-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 60px 0;
        margin-bottom: 40px;
    }
    
    .blog-meta {
        color: rgba(255, 255, 255, 0.8);
        font-size: 14px;
        margin-bottom: 10px;
    }
    
    .blog-title {
        font-weight: bold;
        margin-bottom: 20px;
        line-height: 1.2;
    }
    
    .blog-content {
        font-size: 16px;
        line-height: 1.8;
        color: #333;
    }
    
    .blog-content p {
        margin-bottom: 20px;
    }
    
    .blog-content img {
        max-width: 100%;
        height: auto;
        border-radius: 8px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        margin: 20px 0;
    }
    
    .blog-content a {
        color: #667eea;
        text-decoration: none;
        border-bottom: 1px solid transparent;
        transition: all 0.3s ease;
    }
    
    .blog-content a:hover {
        border-bottom-color: #667eea;
    }
    
    .blog-sidebar {
        background: #f8f9fa;
        border-radius: 10px;
        padding: 30px;
        height: fit-content;
        position: sticky;
        top: 20px;
    }
    
    .meta-item {
        display: flex;
        align-items: center;
        padding: 10px 0;
        border-bottom: 1px solid #e9ecef;
    }
    
    .meta-item:last-child {
        border-bottom: none;
    }
    
    .meta-icon {
        width: 40px;
        height: 40px;
        background: #667eea;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        color: white;
        font-size: 18px;
    }
    
    .meta-content h6 {
        margin: 0;
        font-weight: 600;
        color: #333;
    }
    
    .meta-content small {
        color: #6c757d;
    }
    
    .back-btn, .edit-btn, .save-btn, .cancel-btn, .delete-btn {
        border: none;
        padding: 12px 24px;
        border-radius: 25px;
        text-decoration: none;
        display: inline-flex;
        align-items: center;
        transition: all 0.3s ease;
        margin-bottom: 20px;
        margin-right: 10px;
        cursor: pointer;
    }
    
    .back-btn {
        background: #667eea;
        color: white;
    }
    
    .back-btn:hover {
        background: #5a6fd8;
        color: white;
        transform: translateY(-2px);
    }
    
    .edit-btn {
        background: #28a745;
        color: white;
    }
    
    .edit-btn:hover {
        background: #218838;
        color: white;
        transform: translateY(-2px);
    }

    .delete-btn {
        background: #dc3545;
        color: white;
    }
    
    .delete-btn:hover {
        background: #c82333;
        color: white;
        transform: translateY(-2px);
    }

    .save-btn {
        background: #007bff;
        color: white;
    }
    
    .save-btn:hover {
        background: #0056b3;
        color: white;
        transform: translateY(-2px);
    }
    
    .cancel-btn {
        background: #6c757d;
        color: white;
    }
    
    .cancel-btn:hover {
        background: #545b62;
        color: white;
        transform: translateY(-2px);
    }
    
    .btn i {
        margin-right: 8px;
    }
    
    /* Edit Mode Styles */
    .editable-field {
        border: none;
        background: transparent;
        width: 100%;
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        color: inherit;
        line-height: inherit;
        padding: 5px;
        border-radius: 4px;
        transition: all 0.3s ease;
    }
    
    .editable-field:focus {
        outline: none;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }
    
    .edit-mode .editable-field {
        background: rgba(255, 255, 255, 0.05);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }
    
    .edit-mode .blog-content {
        position: relative;
    }
    
    .sidebar-edit-field {
        width: 100%;
        background: transparent;
        border: none;
        font-size: inherit;
        color: inherit;
        padding: 2px 5px;
        border-radius: 3px;
        transition: all 0.3s ease;
    }
    
    .edit-mode .sidebar-edit-field {
        background: white;
        border: 1px solid #ddd;
    }
    
    .sidebar-edit-field:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.2);
    }
    
    .keywords-input {
        width: 100%;
        background: transparent;
        border: none;
        font-size: inherit;
        color: inherit;
        padding: 2px 5px;
        border-radius: 3px;
    }
    
    .edit-mode .keywords-input {
        background: white;
        border: 1px solid #ddd;
    }
    
    .status-toggle {
        cursor: pointer;
        user-select: none;
        border: none;
        padding: 6px 12px;
        border-radius: 15px;
        font-size: 12px;
        font-weight: 500;
        transition: all 0.3s ease;
    }
    
    .status-toggle:hover {
        transform: scale(1.05);
    }
    
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 9999;
    }
    
    .loading-spinner {
        background: white;
        padding: 20px;
        border-radius: 10px;
        text-align: center;
    }
    
    /* File Upload Styles */
    .file-upload-container {
        position: relative;
        display: inline-block;
        width: 100%;
    }
    
    .file-upload-input {
        position: absolute;
        opacity: 0;
        width: 100%;
        height: 100%;
        cursor: pointer;
    }
    
    .file-upload-label {
        display: block;
        padding: 10px;
        border: 2px dashed #ddd;
        border-radius: 8px;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        background: #f8f9fa;
    }
    
    .file-upload-label:hover {
        border-color: #667eea;
        background: #e8f0fe;
    }
    
    .file-upload-text {
        color: #6c757d;
        font-size: 14px;
    }
    
    .current-image {
        max-width: 100%;
        max-height: 200px;
        object-fit: cover;
        border-radius: 8px;
        margin-bottom: 10px;
    }
    
    .image-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }
    
    .remove-image-btn {
        background: #dc3545;
        color: white;
        border: none;
        padding: 5px 10px;
        border-radius: 4px;
        font-size: 12px;
        cursor: pointer;
    }
    
    .remove-image-btn:hover {
        background: #c82333;
    }
    
    /* CKEditor Styles */
    .ck-editor__editable {
        min-height: 400px;
    }
    
    #ckeditor-container {
        display: none;
    }
    
    .edit-mode #ckeditor-container {
        display: block;
    }
    
    .edit-mode #contentDisplay {
        display: none !important;
    }
    
    @media (max-width: 768px) {
        .blog-title {
            font-size: 2rem;
        }
        
        .blog-sidebar {
            margin-top: 30px;
        }
        
        .back-btn, .edit-btn, .save-btn, .cancel-btn {
            margin-bottom: 10px;
            width: 100%;
            justify-content: center;
        }
    }
</style>

<%- contentFor('content') %>

<div class="container-xxl">
    <!-- Loading Overlay -->
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p class="mt-2 mb-0">Saving changes...</p>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row">
        <div class="col-12">
            <a href="/blogs" class="back-btn">
                <i class="fas fa-arrow-left"></i>
                Back to Blogs
            </a>
            <button class="edit-btn" id="editBtn" onclick="toggleEditMode()">
                <i class="fas fa-edit"></i>
                Edit Blog
            </button>
            <button class="delete-btn" id="deleteBtn" onclick="deleteBlog()">
                <i class="fas fa-trash"></i>
                Delete Blog
            </button>
            <button class="save-btn" id="saveBtn" onclick="saveBlog()" style="display: none;">
                <i class="fas fa-save"></i>
                Save Changes
            </button>
            <button class="cancel-btn" id="cancelBtn" onclick="cancelEdit()" style="display: none;">
                <i class="fas fa-times"></i>
                Cancel
            </button>
        </div>
    </div>

    <!-- Blog Header -->
    <div class="blog-header rounded-3" id="blogHeader">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-lg-8">
                    <div class="blog-meta">
                        <i class="fas fa-calendar-alt me-2"></i>
                        Published on <span id="publishedDate"><%= new Date(blog.createdAt).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric' 
                        }) %></span>
                        <% if (blog.updatedAt !== blog.createdAt) { %>
                            | Updated on <span id="updatedDate"><%= new Date(blog.updatedAt).toLocaleDateString('en-US', { 
                                year: 'numeric', 
                                month: 'long', 
                                day: 'numeric' 
                            }) %></span>
                        <% } %>
                    </div>
                    <h1 class="blog-title">
                        <input type="text" class="editable-field" id="blogTitle" value="<%= blog.title %>" readonly>
                    </h1>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center">
        <!-- Main Content -->
        <div class="col-lg-8">
            <div class="card border-0 shadow-sm">
                <div class="card-body p-4">
                    <!-- Featured Image Section -->
                    <div class="mb-4">
                        <label class="form-label"><strong>Featured Image:</strong></label>
                        <div id="imagePreview" class="mb-3">
                            <% if (blog.featuredImage) { %>
                                <img src="/<%= blog.featuredImage %>" alt="<%= blog.title %>" class="current-image" id="previewImg">
                                <div class="image-actions" id="imageActions" style="display: none;">
                                    <button type="button" class="remove-image-btn" onclick="removeImage()">
                                        <i class="fas fa-trash"></i> Remove Image
                                    </button>
                                </div>
                            <% } %>
                        </div>
                        <div class="file-upload-container" id="fileUploadContainer" style="display: none;">
                            <input type="file" class="file-upload-input" id="featuredImageFile" accept="image/*" onchange="handleImageUpload(event)">
                            <label for="featuredImageFile" class="file-upload-label">
                                <i class="fas fa-cloud-upload-alt mb-2" style="font-size: 24px; color: #667eea;"></i>
                                <div class="file-upload-text">
                                    <strong>Click to upload</strong> or drag and drop<br>
                                    <small>PNG, JPG, GIF up to 10MB</small>
                                </div>
                            </label>
                        </div>
                        <input type="hidden" id="featuredImagePath" value="<%= blog.featuredImage || '' %>">
                    </div>
                    
                    <div class="blog-content">
                        <label class="form-label"><strong>Blog Content:</strong></label>
                        <div id="contentDisplay" style="display: block;">
                            <%- blog.content %>
                        </div>
                        <div id="ckeditor-container">
                            <textarea id="blogContent"><%= blog.content.replace(/<[^>]*>/g, function(match) { return match.replace(/"/g, '&quot;'); }) %></textarea>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- SEO Information -->
            <div class="card border-0 shadow-sm mt-4">
                <div class="card-body p-4">
                    <h5 class="mb-3">SEO Information</h5>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Meta Title:</label>
                            <input type="text" class="form-control sidebar-edit-field" id="metaTitle" 
                                   value="<%= blog.metaTitle || '' %>" readonly>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label class="form-label">Slug:</label>
                            <input type="text" class="form-control sidebar-edit-field" id="blogSlug" 
                                   value="<%= blog.slug %>" readonly>
                        </div>
                        <div class="col-12 mb-3">
                            <label class="form-label">Meta Description:</label>
                            <textarea class="form-control sidebar-edit-field" id="metaDescription" 
                                      readonly rows="3"><%= blog.metaDescription || '' %></textarea>
                        </div>
                        <div class="col-12">
                            <label class="form-label">Meta Keywords (comma separated):</label>
                            <input type="text" class="form-control keywords-input" id="metaKeywords" 
                                   value="<%= blog.metaKeywords ? blog.metaKeywords.join(', ') : '' %>" readonly>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Sidebar -->
        <div class="col-lg-4">
            <div class="blog-sidebar">
                <h5 class="mb-4">Article Information</h5>
                
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-user"></i>
                    </div>
                    <div class="meta-content">
                        <h6>Author</h6>
                        <small>Blog Administrator</small>
                    </div>
                </div>
                
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-calendar"></i>
                    </div>
                    <div class="meta-content">
                        <h6>Published</h6>
                        <small><%= new Date(blog.createdAt).toLocaleDateString() %></small>
                    </div>
                </div>
                
                <% if (blog.updatedAt !== blog.createdAt) { %>
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-edit"></i>
                    </div>
                    <div class="meta-content">
                        <h6>Last Updated</h6>
                        <small><%= new Date(blog.updatedAt).toLocaleDateString() %></small>
                    </div>
                </div>
                <% } %>
                
                <div class="meta-item">
                    <div class="meta-icon">
                        <i class="fas fa-eye"></i>
                    </div>
                    <div class="meta-content">
                        <h6>Status</h6>
                        <small>
                            <button class="status-toggle" id="statusBadge" onclick="toggleStatus()" disabled
                                  style="<%= blog.isPublished ? 'background-color: #28a745; color: white;' : 'background-color: #ffc107; color: #000;' %>">
                                <%= blog.isPublished ? 'Published' : 'Draft' %>
                            </button>
                        </small>
                    </div>
                </div>
            </div>
        </div>
    </div><!--end row-->
</div><!-- container -->

<%- contentFor('extra_javascript') %>
<!-- CKEditor CDN -->
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>

<script>
    let isEditMode = false;
    let originalData = {};
    let currentStatus = <%= blog.isPublished %>;
    let ckEditor = null;
    let uploadedImageFile = null;
    // deleteBlog function
    function deleteBlog() {
        if (confirm('Are you sure you want to delete this blog? This action cannot be undone.')) {
            fetch(`/api/deleteBlog/<%= blog._id %>`, {
                method: 'DELETE'
            })
            .then(response => {
                if (response.ok) {
                    alert('Blog deleted successfully!');
                    window.location.href = '/blogs';
                } else {
                    throw new Error('Failed to delete blog');
                }
            })
            .catch(error => {
                console.error('Error deleting blog:', error);
                alert('Error deleting blog. Please try again.');
            });
        }
    }
    // Store original data
    function storeOriginalData() {
        originalData = {
            title: document.getElementById('blogTitle').value,
            content: ckEditor ? ckEditor.getData() : document.getElementById('contentDisplay').innerHTML,
            featuredImage: document.getElementById('featuredImagePath').value,
            metaTitle: document.getElementById('metaTitle').value,
            metaDescription: document.getElementById('metaDescription').value,
            metaKeywords: document.getElementById('metaKeywords').value,
            slug: document.getElementById('blogSlug').value,
            isPublished: currentStatus
        };
    }
    
    // Initialize CKEditor
    function initializeCKEditor() {
        ClassicEditor
            .create(document.querySelector('#blogContent'), {
                toolbar: [
                    'heading', '|',
                    'bold', 'italic', 'link', '|',
                    'bulletedList', 'numberedList', '|',
                    'outdent', 'indent', '|',
                    'imageUpload', 'blockQuote', 'insertTable', '|',
                    'undo', 'redo'
                ],
                image: {
                    toolbar: [
                        'imageTextAlternative',
                        'imageStyle:full',
                        'imageStyle:side'
                    ]
                }
            })
            .then(editor => {
                ckEditor = editor;
                // Set initial content
                editor.setData(document.getElementById('contentDisplay').innerHTML);
            })
            .catch(error => {
                console.error('Error initializing CKEditor:', error);
            });
    }
    
    function toggleEditMode() {
        isEditMode = !isEditMode;
        const editBtn = document.getElementById('editBtn');
        const saveBtn = document.getElementById('saveBtn');
        const cancelBtn = document.getElementById('cancelBtn');
        const blogHeader = document.getElementById('blogHeader');
        const statusBadge = document.getElementById('statusBadge');
        const fileUploadContainer = document.getElementById('fileUploadContainer');
        const imageActions = document.getElementById('imageActions');
        
        if (isEditMode) {
            // Store original data before editing
            storeOriginalData();
            
            // Initialize CKEditor if not already initialized
            if (!ckEditor) {
                initializeCKEditor();
            }
            
            // Enable edit mode
            blogHeader.classList.add('edit-mode');
            document.body.classList.add('edit-mode');
            
            // Show/hide buttons
            editBtn.style.display = 'none';
            saveBtn.style.display = 'inline-flex';
            cancelBtn.style.display = 'inline-flex';
            
            // Enable status toggle
            statusBadge.disabled = false;
            
            // Show file upload and image actions
            fileUploadContainer.style.display = 'block';
            if (imageActions) {
                imageActions.style.display = 'flex';
            }
            
            // Enable all input fields
            const editableFields = document.querySelectorAll('.editable-field, .sidebar-edit-field, .keywords-input');
            editableFields.forEach(field => {
                field.removeAttribute('readonly');
                field.removeAttribute('disabled');
            });
            
        } else {
            // Disable edit mode
            blogHeader.classList.remove('edit-mode');
            document.body.classList.remove('edit-mode');
            
            // Show/hide buttons
            editBtn.style.display = 'inline-flex';
            saveBtn.style.display = 'none';
            cancelBtn.style.display = 'none';
            
            // Disable status toggle
            statusBadge.disabled = true;
            
            // Hide file upload and image actions
            fileUploadContainer.style.display = 'none';
            if (imageActions) {
                imageActions.style.display = 'none';
            }
            
            // Disable all input fields
            const editableFields = document.querySelectorAll('.editable-field, .sidebar-edit-field, .keywords-input');
            editableFields.forEach(field => {
                field.setAttribute('readonly', true);
            });
        }
    }
    
    function cancelEdit() {
        // Restore original data
        document.getElementById('blogTitle').value = originalData.title;
        document.getElementById('metaTitle').value = originalData.metaTitle;
        document.getElementById('metaDescription').value = originalData.metaDescription;
        document.getElementById('metaKeywords').value = originalData.metaKeywords;
        document.getElementById('blogSlug').value = originalData.slug;
        currentStatus = originalData.isPublished;
        
        // Restore CKEditor content
        if (ckEditor) {
            ckEditor.setData(originalData.content);
        }
        
        // Update status badge
        updateStatusBadge();
        
        // Update content display
        document.getElementById('contentDisplay').innerHTML = originalData.content;
        
        // Reset image upload
        uploadedImageFile = null;
        document.getElementById('featuredImageFile').value = '';
        updateImagePreview();
        
        // Exit edit mode
        toggleEditMode();
    }
    
    function toggleStatus() {
        if (isEditMode) {
            currentStatus = !currentStatus;
            updateStatusBadge();
        }
    }
    
    function updateStatusBadge() {
        const badge = document.getElementById('statusBadge');
        if (currentStatus) {
            badge.textContent = 'Published';
            badge.style.backgroundColor = '#28a745';
            badge.style.color = 'white';
        } else {
            badge.textContent = 'Draft';
            badge.style.backgroundColor = '#ffc107';
            badge.style.color = '#000';
        }
    }
    
    function handleImageUpload(event) {
        const file = event.target.files[0];
        if (file) {
            // Validate file type
            if (!file.type.startsWith('image/')) {
                alert('Please select an image file');
                return;
            }
            
            // Validate file size (10MB limit)
            if (file.size > 10 * 1024 * 1024) {
                alert('File size must be less than 10MB');
                return;
            }
            
            uploadedImageFile = file;
            
            // Create preview
            const reader = new FileReader();
            reader.onload = function(e) {
                updateImagePreview(e.target.result);
            };
            reader.readAsDataURL(file);
        }
    }
    
    function updateImagePreview(imageSrc = null) {
        const previewContainer = document.getElementById('imagePreview');
        const imageActions = document.getElementById('imageActions');
        const currentImagePath = document.getElementById('featuredImagePath').value;
        
        if (imageSrc || currentImagePath) {
            const imgSrc = imageSrc || `/${currentImagePath}`;
            previewContainer.innerHTML = `
                <img src="${imgSrc}" alt="Featured Image" class="current-image" id="previewImg">
                <div class="image-actions" id="imageActions" style="display: ${isEditMode ? 'flex' : 'none'};">
                    <button type="button" class="remove-image-btn" onclick="removeImage()">
                        <i class="fas fa-trash"></i> Remove Image
                    </button>
                </div>
            `;
        } else {
            previewContainer.innerHTML = '';
        }
    }
    
    function removeImage() {
        document.getElementById('featuredImagePath').value = '';
        document.getElementById('featuredImageFile').value = '';
        uploadedImageFile = null;
        updateImagePreview();
    }
    
    async function saveBlog() {
        const loadingOverlay = document.getElementById('loadingOverlay');
        loadingOverlay.style.display = 'flex';
        
        try {
            const formData = new FormData();
            
            // Add text data to formData
            formData.append('title', document.getElementById('blogTitle').value);
            formData.append('content', ckEditor ? ckEditor.getData() : document.getElementById('contentDisplay').innerHTML);
            formData.append('metaTitle', document.getElementById('metaTitle').value);
            formData.append('metaDescription', document.getElementById('metaDescription').value);
            formData.append('metaKeywords', document.getElementById('metaKeywords').value);
            formData.append('slug', document.getElementById('blogSlug').value);
            formData.append('isPublished', currentStatus);
            
            // Add existing image path if no new image is uploaded
            if (!uploadedImageFile && document.getElementById('featuredImagePath').value) {
                formData.append('existingImagePath', document.getElementById('featuredImagePath').value);
            }
            
            // Add new image file if uploaded
            if (uploadedImageFile) {
                formData.append('featuredImage', uploadedImageFile);
            }
            
            const response = await fetch(`/api/updateBlog/<%= blog._id %>`, {
                method: 'put',
                body: formData
            });
            
            if (response.ok) {
                const result = await response.json();
                
                // Update the display content
                document.getElementById('contentDisplay').innerHTML = result.content;
                document.getElementById('featuredImagePath').value = result.featuredImage || '';
                
                // Reset upload state
                uploadedImageFile = null;
                document.getElementById('featuredImageFile').value = '';
                
                // Update image preview
                updateImagePreview(result.featuredImage ? `/${result.featuredImage}` : null);
                
                // Show success message
                alert('Blog updated successfully!');
                
                // Exit edit mode
                toggleEditMode();
                
                // Update page title if changed
                if (result.title !== originalData.title) {
                    document.title = result.title;
                }
                
            } else {
                throw new Error('Failed to save blog');
            }
            
        } catch (error) {
            console.error('Error saving blog:', error);
            alert('Error saving blog. Please try again.');
        } finally {
            loadingOverlay.style.display = 'none';
        }
    }
    
    // Initialize on page load
    document.addEventListener('DOMContentLoaded', function() {
        updateImagePreview();
        updateStatusBadge();
        
        // Smooth scroll for anchor links
        const links = document.querySelectorAll('a[href^="#"]');
        links.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });
    });
</script>